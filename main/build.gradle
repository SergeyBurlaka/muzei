/*
 * Copyright 2014 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.fabric'

project.archivesBaseName = "muzei"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(file('../version.properties')))

    dexOptions.preDexLibraries true

    defaultConfig {
        applicationId "net.nurik.roman.muzei"
        minSdkVersion 19
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionName versionProps['name']
        versionCode versionProps['code'].toInteger()

        wearAppUnbundled true
        buildConfigField "String", "DEVICE_TYPE", "\"android\""
    }

    signingConfigs {
        release {
            Properties localProps = new Properties()
            localProps.load(new FileInputStream(file('../local.properties')))
            Properties keyProps = new Properties()
            if (localProps['keystore.props.file'] != null) {
                keyProps.load(new FileInputStream(file(localProps['keystore.props.file'])))
            }
            storeFile keyProps["store"] != null ? file(keyProps["store"]) : null
            keyAlias keyProps["alias"] ?: ""
            storePassword keyProps["storePass"] ?: ""
            keyPassword keyProps["pass"] ?: ""
        }
    }

    buildTypes {
        debug {
            versionNameSuffix " Debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard-project.txt')
            signingConfig signingConfigs.release
        }

        publicBeta.initWith(buildTypes.release)
        publicBeta {
            versionNameSuffix " " + versionProps['betaNumber']
        }

        publicDebug.initWith(buildTypes.publicBeta)
        publicDebug {
            debuggable true
            renderscriptDebuggable true
            versionNameSuffix " Debug " + versionProps['betaNumber']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    implementation "com.squareup.picasso:picasso:$rootProject.ext.picassoVersion"
    implementation "com.google.android.gms:play-services-wearable:$rootProject.ext.googlePlayServicesVersion"
    implementation "com.google.firebase:firebase-core:$rootProject.ext.googlePlayServicesVersion"
    implementation "com.google.firebase:firebase-perf:$rootProject.ext.googlePlayServicesVersion"
    implementation "com.crashlytics.sdk.android:crashlytics:$rootProject.ext.crashlyticsVersion"
    implementation "com.twofortyfouram:android-plugin-api-for-locale:1.0.2"
    implementation "org.greenrobot:eventbus:3.0.0"
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"
    implementation "com.android.support:customtabs:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:exifinterface:$rootProject.ext.supportLibraryVersion"
    implementation "android.arch.lifecycle:common-java8:$rootProject.ext.lifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$rootProject.ext.lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.ext.lifecycleVersion"

    implementation project(':api')
    implementation project(':android-client-common')
    implementation project(':source-legacy')
    implementation project(':source-single')
    implementation project(':source-featured-art')
    implementation project(':source-gallery')
}

apply plugin: 'com.google.gms.google-services'